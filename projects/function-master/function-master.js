//////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function objectValues(object) {
var array=[];
for(var key in object){
    array.push(object[key]);
}
return array;
} 

//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) {
var arr = [];
for(let key in object){
    arr.push(key)
     //arr.join(' ')
}
return arr.join(' ');
}

//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(object) {
    var string = [];
for(var key in object ){
if (typeof object[key] === "string"){
    string.push(object[key]);
}
}
return string.join(' ');
}

//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
    //var arr = [];
    //var obj = [];
    if(Array.isArray(collection)){
        return "array";}
       else{
        return "object";
       } 
    }



//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {
 var string = string. charAt(0).toUpperCase() + string.substr(1)
 return string; 
}

//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeAllWords(string) {
    // loop through strings and do the same thing 
    var newWord= string.split(" ");
    var petty = "";
    for( let i = 0; i< newWord.length;i++){
        var string = newWord[i]. charAt(0).toUpperCase() + newWord[i].substr(1)
           petty += string + " "
    }
     return petty.trim();
}

//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function welcomeMessage(object) {
         var name = object.name;
         var capitalName = name[0].toUpperCase() + name.substr(1);
         var welcomeSent = "Welcome " + capitalName + "!";
        
         return welcomeSent;
            
}

//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function profileInfo(object) {

var name = object.name; 
var nameUpper = name[0].toUpperCase() + name.substr(1);
console.log(nameUpper);
var species = object.species;
var speciesUpper = species[0].toUpperCase() + species.substr(1);
var together = nameUpper + " is a " + speciesUpper;
console.log(together);
 return together;
}


//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function maybeNoises(object) {
    var noises = object.noises;
var array = Array.isArray(noises);
    if(array && noises.length > 1){
      return noises.join(" ");
    }
      else {
          return "there are no noises"
        } 
}

//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function hasWord(string, word) {
    if(string.includes(word)){
         return true;
     }
         else {
             return false;
           }
}

//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend (name, object) {
    object.friends.push(name); 
 return object;
}

//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {
    if(Array.isArray(object.friends) && object.friends.includes(name)){
            return true;
          }
        // return true if name is a friend in the objecet
        else {
          return false;
            }
          // false otherwise 
}

/ //////////////////////////////////////////////////////////////////////
// // Function 13 - Non-Friends /////////////////////////////////////////
// //////////////////////////////////////////////////////////////////////

function nonFriends(name, array) {
  var notFriends = [];
for(let i = 0; i < array.length; i++){
    if(array[i].name === name){
    } else if(!array[i].friends.includes(name)){
        notFriends.push(array[i].name)
        
    } 
} console.log(notFriends);
return notFriends;


}

// //////////////////////////////////////////////////////////////////////
// // Function 14 - Update Object ///////////////////////////////////////
// //////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {
  object[key] = value;
  return object;
}

// //////////////////////////////////////////////////////////////////////
// // Function 15 - Remove Properties ///////////////////////////////////
// //////////////////////////////////////////////////////////////////////

function removeProperties(object, array) {
    for (var i = 0; i < array.length; i++){
      delete object[array[i]];
    }
    return  object;
}


//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array) {
    return [...new Set(array)];
}

//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
   }